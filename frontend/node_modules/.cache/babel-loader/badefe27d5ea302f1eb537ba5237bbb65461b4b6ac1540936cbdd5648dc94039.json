{"ast":null,"code":"var _jsxFileName = \"/Users/ankurbaliga/MERN/smartbill-splitter/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null); // Store the uploaded bill file\n  const [response, setResponse] = useState(null); // Store the backend response\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [people, setPeople] = useState([]); // Store list of people added\n  const [newPerson, setNewPerson] = useState(''); // Track new person input\n\n  // Automatically upload file when selected\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      await uploadFile(selectedFile); // Automatically upload once file is selected\n    }\n  };\n\n  // Handle uploading file to backend\n  const uploadFile = async selectedFile => {\n    const formData = new FormData();\n    formData.append('bill', selectedFile);\n    try {\n      setLoading(true); // Show loading\n      const res = await axios.post('http://localhost:3001/upload-bill', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setResponse(res.data.items); // Set the response from the backend\n    } catch (error) {\n      console.error('Error uploading bill:', error);\n    } finally {\n      setLoading(false); // Hide loading\n    }\n  };\n\n  // Add new person when clicking the button or pressing Enter\n  const handleAddPerson = () => {\n    if (newPerson && !people.includes(newPerson)) {\n      setPeople([...people, newPerson]); // Add person to the list\n      setNewPerson(''); // Clear input field\n    }\n  };\n\n  // Allow pressing Enter to add person\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleAddPerson();\n    }\n  };\n\n  // Render UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bill Splitter App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPerson,\n        onChange: e => setNewPerson(e.target.value),\n        onKeyDown: handleKeyPress // Allow pressing Enter\n        ,\n        placeholder: \"Enter person name and press Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPerson,\n        children: \"Add Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), people.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: people.map((person, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: person\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), file && people.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Ready to split the bill!'),\n      children: \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), response && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Items and Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Assign to People\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: response.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: people.map((person, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this), person]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ldkBnZpEox2zSiatJch0ZfPTLxM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","response","setResponse","loading","setLoading","people","setPeople","newPerson","setNewPerson","handleFileChange","e","selectedFile","target","files","uploadFile","formData","FormData","append","res","post","headers","data","items","error","console","handleAddPerson","includes","handleKeyPress","key","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","value","onKeyDown","placeholder","onClick","length","map","person","index","log","border","item","name","price","toFixed","idx","_c","$RefreshReg$"],"sources":["/Users/ankurbaliga/MERN/smartbill-splitter/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);  // Store the uploaded bill file\n  const [response, setResponse] = useState(null);  // Store the backend response\n  const [loading, setLoading] = useState(false);  // Track loading state\n  const [people, setPeople] = useState([]);  // Store list of people added\n  const [newPerson, setNewPerson] = useState('');  // Track new person input\n\n  // Automatically upload file when selected\n  const handleFileChange = async (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    if (selectedFile) {\n      await uploadFile(selectedFile);  // Automatically upload once file is selected\n    }\n  };\n\n  // Handle uploading file to backend\n  const uploadFile = async (selectedFile) => {\n    const formData = new FormData();\n    formData.append('bill', selectedFile);\n\n    try {\n      setLoading(true);  // Show loading\n      const res = await axios.post('http://localhost:3001/upload-bill', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      setResponse(res.data.items);  // Set the response from the backend\n    } catch (error) {\n      console.error('Error uploading bill:', error);\n    } finally {\n      setLoading(false);  // Hide loading\n    }\n  };\n\n  // Add new person when clicking the button or pressing Enter\n  const handleAddPerson = () => {\n    if (newPerson && !people.includes(newPerson)) {\n      setPeople([...people, newPerson]);  // Add person to the list\n      setNewPerson('');  // Clear input field\n    }\n  };\n\n  // Allow pressing Enter to add person\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleAddPerson();\n    }\n  };\n\n  // Render UI\n  return (\n    <div>\n      <h1>Bill Splitter App</h1>\n\n      {/* Step 1: File Upload */}\n      <div>\n        <h2>Upload Bill</h2>\n        <input type=\"file\" onChange={handleFileChange} />\n        {loading && <p>Loading...</p>}\n      </div>\n\n      {/* Step 2: Add People */}\n      <div>\n        <h2>Add People</h2>\n        <input\n          type=\"text\"\n          value={newPerson}\n          onChange={(e) => setNewPerson(e.target.value)}\n          onKeyDown={handleKeyPress}  // Allow pressing Enter\n          placeholder=\"Enter person name and press Enter\"\n        />\n        <button onClick={handleAddPerson}>Add Person</button>\n\n        {/* List of added people */}\n        {people.length > 0 && (\n          <ul>\n            {people.map((person, index) => (\n              <li key={index}>{person}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {/* Step 3: Go Button */}\n      {file && people.length > 0 && (\n        <button onClick={() => console.log('Ready to split the bill!')}>Go</button>\n      )}\n\n      {/* Step 4: Display Table after Bill is Processed */}\n      {response && !loading && (\n        <div>\n          <h2>Items and Prices</h2>\n          <table border=\"1\">\n            <thead>\n              <tr>\n                <th>Item</th>\n                <th>Price</th>\n                <th>Assign to People</th>\n              </tr>\n            </thead>\n            <tbody>\n              {response.map((item, index) => (\n                <tr key={index}>\n                  <td>{item.name}</td>\n                  <td>${item.price.toFixed(2)}</td>\n                  <td>\n                    {people.map((person, idx) => (\n                      <label key={idx}>\n                        <input type=\"checkbox\" />\n                        {person}\n                      </label>\n                    ))}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}